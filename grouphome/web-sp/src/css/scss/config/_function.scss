// -------------------------------------------------------------------
// Math
// -------------------------------------------------------------------
@use 'sass:math';

//
// 任意の桁数の丸めを制御
// https://terkel.jp/archives/2012/12/decimal-digits-and-rounding-sass-function/
// -------------------------------------------------------------------
//

@function pxToRem($num, $rem: 16) {
  @return math.div($num, $rem) + rem;
}

@function toFixed($num, $digits: 0, $style: 'round') {
  $n: 1;
  // $num must be a number
  @if type-of($num) != number {
    @warn '#{ $num } is not a number.';
    @return $num;
  }
  // $digits must be a unitless number
  @if (type-of($digits) != number) {
    @warn '#{$digits} is not a number.';
    @return $num;
  } @else if not unitless($digits) {
    @warn '#{$digits} has a unit.';
    @return $num;
  }
  @for $i from 1 through $digits {
    $n: $n * 10;
  }
  @if $style == 'round' {
    @return round($num * $n) / $n;
  } @else if $style == 'ceil' {
    @return ceil($num * $n) / $n;
  } @else if $style == 'floor' {
    @return floor($num * $n) / $n;
  } @else {
    @warn '#{ $style } is undefined keyword.';
    @return $num;
  }
}

// Round (四捨五入)
@function roundDecimal($num, $digits: 0) {
  @return toFixed($num, $digits, 'round');
}

// Ceil (切り上げ)
@function ceilDecimal($num, $digits: 0) {
  @return toFixed($num, $digits, 'ceil');
}

// Floor (切り捨て)
@function floorDecimal($num, $digits: 0) {
  @return toFixed($num, $digits, 'floor');
}
